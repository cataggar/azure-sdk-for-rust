// Copyright (c) Microsoft Corporation. All rights reserved.
//
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) Rust Code Generator. DO NOT EDIT.

use typespec_client_core::{
    create_enum, create_extensible_enum,
};

create_extensible_enum!(
    ActionType,
    (Internal, "Internal")
);

create_extensible_enum!(
    AddonProvisioningState,
    (Building, "Building"),
    (Canceled, "Canceled"),
    (Cancelled, "Cancelled"),
    (Deleting, "Deleting"),
    (Failed, "Failed"),
    (Succeeded, "Succeeded"),
    (Updating, "Updating")
);

create_extensible_enum!(
    AddonType,
    (Arc, "Arc"),
    (HCX, "HCX"),
    (SRM, "SRM"),
    (VR, "VR")
);

create_extensible_enum!(
    AffinityStrength,
    (Must, "Must"),
    (Should, "Should")
);

create_extensible_enum!(
    AffinityType,
    (Affinity, "Affinity"),
    (AntiAffinity, "AntiAffinity")
);

create_extensible_enum!(
    AvailabilityStrategy,
    (DualZone, "DualZone"),
    (SingleZone, "SingleZone")
);

create_extensible_enum!(
    AzureHybridBenefitType,
    (None, "None"),
    (SqlHost, "SqlHost")
);

create_extensible_enum!(
    CloudLinkProvisioningState,
    (Canceled, "Canceled"),
    (Failed, "Failed"),
    (Succeeded, "Succeeded")
);

create_extensible_enum!(
    CloudLinkStatus,
    (Active, "Active"),
    (Building, "Building"),
    (Deleting, "Deleting"),
    (Disconnected, "Disconnected"),
    (Failed, "Failed")
);

create_extensible_enum!(
    ClusterProvisioningState,
    (Canceled, "Canceled"),
    (Cancelled, "Cancelled"),
    (Deleting, "Deleting"),
    (Failed, "Failed"),
    (Succeeded, "Succeeded"),
    (Updating, "Updating")
);

create_extensible_enum!(
    CreatedByType,
    (Application, "Application"),
    (Key, "Key"),
    (ManagedIdentity, "ManagedIdentity"),
    (User, "User")
);

create_extensible_enum!(
    DatastoreProvisioningState,
    (Canceled, "Canceled"),
    (Cancelled, "Cancelled"),
    (Creating, "Creating"),
    (Deleting, "Deleting"),
    (Failed, "Failed"),
    (Pending, "Pending"),
    (Succeeded, "Succeeded"),
    (Updating, "Updating")
);

create_extensible_enum!(
    DatastoreStatus,
    (Accessible, "Accessible"),
    (Attached, "Attached"),
    (DeadOrError, "DeadOrError"),
    (Detached, "Detached"),
    (Inaccessible, "Inaccessible"),
    (LostCommunication, "LostCommunication"),
    (Unknown, "Unknown")
);

create_extensible_enum!(
    DhcpTypeEnum,
    (RELAY, "RELAY"),
    (SERVER, "SERVER")
);

create_extensible_enum!(
    DnsServiceLogLevelEnum,
    (DEBUG, "DEBUG"),
    (ERROR, "ERROR"),
    (FATAL, "FATAL"),
    (INFO, "INFO"),
    (WARNING, "WARNING")
);

create_extensible_enum!(
    DnsServiceStatusEnum,
    (FAILURE, "FAILURE"),
    (SUCCESS, "SUCCESS")
);

create_extensible_enum!(
    DnsZoneType,
    (Private, "Private"),
    (Public, "Public")
);

create_extensible_enum!(
    EncryptionKeyStatus,
    (AccessDenied, "AccessDenied"),
    (Connected, "Connected")
);

create_extensible_enum!(
    EncryptionState,
    (Disabled, "Disabled"),
    (Enabled, "Enabled")
);

create_extensible_enum!(
    EncryptionVersionType,
    (AutoDetected, "AutoDetected"),
    (Fixed, "Fixed")
);

create_extensible_enum!(
    ExpressRouteAuthorizationProvisioningState,
    (Canceled, "Canceled"),
    (Failed, "Failed"),
    (Succeeded, "Succeeded"),
    (Updating, "Updating")
);

create_extensible_enum!(
    GlobalReachConnectionProvisioningState,
    (Canceled, "Canceled"),
    (Failed, "Failed"),
    (Succeeded, "Succeeded"),
    (Updating, "Updating")
);

create_extensible_enum!(
    GlobalReachConnectionStatus,
    (Connected, "Connected"),
    (Connecting, "Connecting"),
    (Disconnected, "Disconnected")
);

create_extensible_enum!(
    HcxEnterpriseSiteProvisioningState,
    (Canceled, "Canceled"),
    (Failed, "Failed"),
    (Succeeded, "Succeeded")
);

create_extensible_enum!(
    HcxEnterpriseSiteStatus,
    (Available, "Available"),
    (Consumed, "Consumed"),
    (Deactivated, "Deactivated"),
    (Deleted, "Deleted")
);

create_extensible_enum!(
    InternetEnum,
    (Disabled, "Disabled"),
    (Enabled, "Enabled")
);

create_extensible_enum!(
    IscsiPathProvisioningState,
    (Building, "Building"),
    (Canceled, "Canceled"),
    (Deleting, "Deleting"),
    (Failed, "Failed"),
    (Pending, "Pending"),
    (Succeeded, "Succeeded"),
    (Updating, "Updating")
);

create_extensible_enum!(
    MountOptionEnum,
    (ATTACH, "ATTACH"),
    (MOUNT, "MOUNT")
);

create_extensible_enum!(
    NsxPublicIpQuotaRaisedEnum,
    (Disabled, "Disabled"),
    (Enabled, "Enabled")
);

create_extensible_enum!(
    OptionalParamEnum,
    (Optional, "Optional"),
    (Required, "Required")
);

create_extensible_enum!(
    Origin,
    (System, "system"),
    (User, "user"),
    (Usersystem, "user,system")
);

create_extensible_enum!(
    PlacementPolicyProvisioningState,
    (Building, "Building"),
    (Canceled, "Canceled"),
    (Deleting, "Deleting"),
    (Failed, "Failed"),
    (Succeeded, "Succeeded"),
    (Updating, "Updating")
);

create_extensible_enum!(
    PlacementPolicyState,
    (Disabled, "Disabled"),
    (Enabled, "Enabled")
);

create_extensible_enum!(
    PlacementPolicyType,
    (VmHost, "VmHost"),
    (VmVm, "VmVm")
);

create_extensible_enum!(
    PortMirroringDirectionEnum,
    (BIDIRECTIONAL, "BIDIRECTIONAL"),
    (EGRESS, "EGRESS"),
    (INGRESS, "INGRESS")
);

create_extensible_enum!(
    PortMirroringStatusEnum,
    (FAILURE, "FAILURE"),
    (SUCCESS, "SUCCESS")
);

create_extensible_enum!(
    PrivateCloudProvisioningState,
    (Building, "Building"),
    (Canceled, "Canceled"),
    (Cancelled, "Cancelled"),
    (Deleting, "Deleting"),
    (Failed, "Failed"),
    (Pending, "Pending"),
    (Succeeded, "Succeeded"),
    (Updating, "Updating")
);

create_extensible_enum!(
    QuotaEnabled,
    (Disabled, "Disabled"),
    (Enabled, "Enabled")
);

create_extensible_enum!(
    ResourceProvisioningState,
    (Canceled, "Canceled"),
    (Failed, "Failed"),
    (Succeeded, "Succeeded")
);

create_extensible_enum!(
    ScriptCmdletAudience,
    (Any, "Any"),
    (Automation, "Automation")
);

create_extensible_enum!(
    ScriptCmdletProvisioningState,
    (Canceled, "Canceled"),
    (Failed, "Failed"),
    (Succeeded, "Succeeded")
);

create_extensible_enum!(
    ScriptExecutionParameterType,
    (Credential, "Credential"),
    (SecureValue, "SecureValue"),
    (Value, "Value")
);

create_extensible_enum!(
    ScriptExecutionProvisioningState,
    (Canceled, "Canceled"),
    (Cancelled, "Cancelled"),
    (Cancelling, "Cancelling"),
    (Deleting, "Deleting"),
    (Failed, "Failed"),
    (Pending, "Pending"),
    (Running, "Running"),
    (Succeeded, "Succeeded")
);

create_extensible_enum!(
    ScriptOutputStreamType,
    (Error, "Error"),
    (Information, "Information"),
    (Output, "Output"),
    (Warning, "Warning")
);

create_extensible_enum!(
    ScriptPackageProvisioningState,
    (Canceled, "Canceled"),
    (Failed, "Failed"),
    (Succeeded, "Succeeded")
);

create_extensible_enum!(
    ScriptParameterTypes,
    (Bool, "Bool"),
    (Credential, "Credential"),
    (Float, "Float"),
    (Int, "Int"),
    (SecureString, "SecureString"),
    (String, "String")
);

create_extensible_enum!(
    SegmentStatusEnum,
    (FAILURE, "FAILURE"),
    (SUCCESS, "SUCCESS")
);

create_enum!(
    SkuTier,
    (Basic, "Basic"),
    (Free, "Free"),
    (Premium, "Premium"),
    (Standard, "Standard")
);

create_extensible_enum!(
    SslEnum,
    (Disabled, "Disabled"),
    (Enabled, "Enabled")
);

create_extensible_enum!(
    SystemAssignedServiceIdentityType,
    (None, "None"),
    (SystemAssigned, "SystemAssigned")
);

create_extensible_enum!(
    TrialStatus,
    (TrialAvailable, "TrialAvailable"),
    (TrialDisabled, "TrialDisabled"),
    (TrialUsed, "TrialUsed")
);

create_extensible_enum!(
    VMGroupStatusEnum,
    (FAILURE, "FAILURE"),
    (SUCCESS, "SUCCESS")
);

create_extensible_enum!(
    VMTypeEnum,
    (EDGE, "EDGE"),
    (REGULAR, "REGULAR"),
    (SERVICE, "SERVICE")
);

create_extensible_enum!(
    VirtualMachineProvisioningState,
    (Canceled, "Canceled"),
    (Failed, "Failed"),
    (Succeeded, "Succeeded")
);

create_extensible_enum!(
    VirtualMachineRestrictMovementState,
    (Disabled, "Disabled"),
    (Enabled, "Enabled")
);

create_extensible_enum!(
    VisibilityParameterEnum,
    (Hidden, "Hidden"),
    (Visible, "Visible")
);

create_extensible_enum!(
    WorkloadNetworkDhcpProvisioningState,
    (Building, "Building"),
    (Canceled, "Canceled"),
    (Deleting, "Deleting"),
    (Failed, "Failed"),
    (Succeeded, "Succeeded"),
    (Updating, "Updating")
);

create_extensible_enum!(
    WorkloadNetworkDnsServiceProvisioningState,
    (Building, "Building"),
    (Canceled, "Canceled"),
    (Deleting, "Deleting"),
    (Failed, "Failed"),
    (Succeeded, "Succeeded"),
    (Updating, "Updating")
);

create_extensible_enum!(
    WorkloadNetworkDnsZoneProvisioningState,
    (Building, "Building"),
    (Canceled, "Canceled"),
    (Deleting, "Deleting"),
    (Failed, "Failed"),
    (Succeeded, "Succeeded"),
    (Updating, "Updating")
);

create_extensible_enum!(
    WorkloadNetworkPortMirroringProvisioningState,
    (Building, "Building"),
    (Canceled, "Canceled"),
    (Deleting, "Deleting"),
    (Failed, "Failed"),
    (Succeeded, "Succeeded"),
    (Updating, "Updating")
);

create_extensible_enum!(
    WorkloadNetworkProvisioningState,
    (Building, "Building"),
    (Canceled, "Canceled"),
    (Deleting, "Deleting"),
    (Failed, "Failed"),
    (Succeeded, "Succeeded"),
    (Updating, "Updating")
);

create_extensible_enum!(
    WorkloadNetworkPublicIPProvisioningState,
    (Building, "Building"),
    (Canceled, "Canceled"),
    (Deleting, "Deleting"),
    (Failed, "Failed"),
    (Succeeded, "Succeeded"),
    (Updating, "Updating")
);

create_extensible_enum!(
    WorkloadNetworkSegmentProvisioningState,
    (Building, "Building"),
    (Canceled, "Canceled"),
    (Deleting, "Deleting"),
    (Failed, "Failed"),
    (Succeeded, "Succeeded"),
    (Updating, "Updating")
);

create_extensible_enum!(
    WorkloadNetworkVMGroupProvisioningState,
    (Building, "Building"),
    (Canceled, "Canceled"),
    (Deleting, "Deleting"),
    (Failed, "Failed"),
    (Succeeded, "Succeeded"),
    (Updating, "Updating")
);

